#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFTULT 0
#define SYMBOL 1
#define NAVNUM 2
#define DEVICE 3

&mt {
    flavor = "hold-preferred"; // default feature
};

&lt {
    flavor = "hold-preferred"; // default feature
//    quick-tap-ms = <200>;
};


/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        device_layer {
            if-layers = <SYMBOL NAVNUM>;
            then-layer = <DEVICE>;
        };
    };

    macros {
        zenhan: zenhan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp GRAVE>
                , <&macro_release &kp LALT>
                ;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
             bindings = <
                &kp ESC     &kp GRAVE   &kp N1        &kp N2        &kp N3      &kp N4      &kp N5  &kp N6              &kp N7  &kp N8      &kp N9      &kp N0      &kp LBKT    &kp RBKT
                &kp DEL     &kp TAB     &kp Q         &kp W         &kp E       &kp R       &kp T   &kp Y               &kp U   &kp I       &kp O       &kp P       &kp MINUS   &kp EQUAL
                &kp RET     &kp LCTRL   &kp A         &kp S         &kp D       &kp F       &kp G   &kp H               &kp J   &kp K       &kp L       &kp SEMI    &kp SQT     &kp PG_UP
                            &kp LSHFT   &kp Z         &kp X         &kp C       &kp V       &kp B   &kp N               &kp M   &kp COMMA   &kp DOT     &kp FSLH    &kp UP      &kp PG_DN
                &kp PSCRN   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp LALT    &lt SYMBOL SPACE    &lt NAVNUM BSPC     &mt RSHFT RET       &kp LGUI    &kp LEFT    &kp DOWN    &kp RIGHT
            >;
        };
        symbol_layer {
             bindings = <
                &trans  &trans      &trans      &trans      &trans      &trans      &trans      &trans  &trans      &trans      &trans      &trans      &trans      &trans
                &trans  &kp TILDE   &kp EXCL    &kp AT      &kp HASH   &kp DLLR     &kp PRCNT   &trans  &kp GRAVE   &kp BSLH    &kp LPAR    &kp RPAR    &kp EQUAL   &trans
                &trans  &trans      &kp PLUS    &kp MINUS   &kp SLASH  &kp STAR     &kp EQUAL   &trans  &kp LBRC    &kp LBKT    &kp RBKT    &kp COLON   &kp DQT     &kp C_BRI_UP
                        &trans      &kp PIPE    &kp DOT     &kp COMMA  &kp CARET    &kp AMPS    &trans  &kp RBRC    &kp LT      &kp GT      &kp QMARK   &trans      &kp C_BRI_DN
                &trans  &trans      &trans      &trans      &trans      &trans                  &trans  &kp LS(RET)             &trans      &trans      &trans      &trans
            >;
        };
        navnum_layer {
            bindings = <
                &trans  &trans      &trans      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6  &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
                &trans  &zenhan     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6  &kp N7      &kp N8      &kp N9      &kp N0      &trans      &trans
                &trans  &trans      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp UP  &kp LEFT    &kp DOWN    &kp RIGHT   &kp BSPC    &kp DEL     &trans
                        &trans      &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(Y)   &trans  &trans      &kp HOME    &kp END     &kp BSLH    &trans      &trans
                &trans  &trans      &trans      &trans      &trans      &trans                  &trans  &trans                  &trans      &trans      &trans      &trans
            >;
        };
        device_layer {
             bindings = <
                &bootloader     &trans  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans  &trans  &trans  &bt BT_CLR  &trans  &trans
                &trans          &trans  &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans
                &trans          &trans  &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans
                                &trans  &trans          &trans          &trans          &trans          &trans          &trans  &trans  &trans  &trans  &trans      &trans  &trans
                &trans          &trans  &trans          &trans          &trans          &trans                          &trans          &trans  &trans  &trans      &trans  &trans
            >;
        };
    };
};